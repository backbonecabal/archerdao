{
    "openapi": "3.0.0",
    "info": {
        "title": "ArcherDAO API",
        "version": "1.0",
        "contact": {}
    },
    "paths": {
        "/{address}/getPrice": {
            "get": {
                "summary": "getPrice(address,bytes) [read only]",
                "operationId": "getPrice_get",
                "parameters": [
                    {
                        "description": "The contract address",
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "address: contract to query",
                        "name": "contractAddress",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "bytes: the bytecode for the contract call",
                        "name": "data",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/fromParam"
                    },
                    {
                        "$ref": "#/components/parameters/valueParam"
                    },
                    {
                        "$ref": "#/components/parameters/gasParam"
                    },
                    {
                        "$ref": "#/components/parameters/gaspriceParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getPrice_outputs"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "getPrice(address,bytes) [read only]",
                "operationId": "getPrice_post",
                "parameters": [
                    {
                        "description": "The contract address",
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/fromParam"
                    },
                    {
                        "$ref": "#/components/parameters/valueParam"
                    },
                    {
                        "$ref": "#/components/parameters/gasParam"
                    },
                    {
                        "$ref": "#/components/parameters/gaspriceParam"
                    },
                    {
                        "$ref": "#/components/parameters/syncParam"
                    },
                    {
                        "$ref": "#/components/parameters/callParam"
                    },
                    {
                        "$ref": "#/components/parameters/privateFromParam"
                    },
                    {
                        "$ref": "#/components/parameters/privateForParam"
                    },
                    {
                        "$ref": "#/components/parameters/blocknumberParam"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/getPrice_inputs"
                            }
                        },
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/getPrice_inputs"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getPrice_outputs"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{address}/query": {
            "get": {
                "summary": "query(bytes,uint256[]) [read only]",
                "operationId": "query_get",
                "parameters": [
                    {
                        "description": "The contract address",
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "bytes: the compiled bytecode for the series of function calls to get the final price",
                        "name": "script",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "uint256[]: index locations within the script to insert input amounts dynamically",
                        "name": "inputLocations",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/fromParam"
                    },
                    {
                        "$ref": "#/components/parameters/valueParam"
                    },
                    {
                        "$ref": "#/components/parameters/gasParam"
                    },
                    {
                        "$ref": "#/components/parameters/gaspriceParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/query_outputs"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "query(bytes,uint256[]) [read only]",
                "operationId": "query_post",
                "parameters": [
                    {
                        "description": "The contract address",
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/fromParam"
                    },
                    {
                        "$ref": "#/components/parameters/valueParam"
                    },
                    {
                        "$ref": "#/components/parameters/gasParam"
                    },
                    {
                        "$ref": "#/components/parameters/gaspriceParam"
                    },
                    {
                        "$ref": "#/components/parameters/syncParam"
                    },
                    {
                        "$ref": "#/components/parameters/callParam"
                    },
                    {
                        "$ref": "#/components/parameters/privateFromParam"
                    },
                    {
                        "$ref": "#/components/parameters/privateForParam"
                    },
                    {
                        "$ref": "#/components/parameters/blocknumberParam"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/query_inputs"
                            }
                        },
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/query_inputs"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/query_outputs"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{address}/queryAllPrices": {
            "get": {
                "summary": "queryAllPrices(bytes,uint256[]) [read only]",
                "operationId": "queryAllPrices_get",
                "parameters": [
                    {
                        "description": "The contract address",
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "bytes: the compiled bytecode for the series of function calls to get the final price",
                        "name": "script",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "uint256[]: index locations within the script to insert input amounts dynamically",
                        "name": "inputLocations",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/fromParam"
                    },
                    {
                        "$ref": "#/components/parameters/valueParam"
                    },
                    {
                        "$ref": "#/components/parameters/gasParam"
                    },
                    {
                        "$ref": "#/components/parameters/gaspriceParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/queryAllPrices_outputs"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "queryAllPrices(bytes,uint256[]) [read only]",
                "operationId": "queryAllPrices_post",
                "parameters": [
                    {
                        "description": "The contract address",
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/fromParam"
                    },
                    {
                        "$ref": "#/components/parameters/valueParam"
                    },
                    {
                        "$ref": "#/components/parameters/gasParam"
                    },
                    {
                        "$ref": "#/components/parameters/gaspriceParam"
                    },
                    {
                        "$ref": "#/components/parameters/syncParam"
                    },
                    {
                        "$ref": "#/components/parameters/callParam"
                    },
                    {
                        "$ref": "#/components/parameters/privateFromParam"
                    },
                    {
                        "$ref": "#/components/parameters/privateForParam"
                    },
                    {
                        "$ref": "#/components/parameters/blocknumberParam"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/queryAllPrices_inputs"
                            }
                        },
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/queryAllPrices_inputs"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/queryAllPrices_outputs"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "queryAllPrices(bytes,uint256[]) [read only]",
                "description": "",
                "parameters": [
                    {
                        "description": "The contract address",
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "bytes: the compiled bytecode for the series of function calls to get the final price",
                        "name": "script",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "uint256[]: index locations within the script to insert input amounts dynamically",
                        "name": "inputLocations",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/fromParam"
                    },
                    {
                        "$ref": "#/components/parameters/valueParam"
                    },
                    {
                        "$ref": "#/components/parameters/gasParam"
                    },
                    {
                        "$ref": "#/components/parameters/gaspriceParam"
                    }
                ],
                "operationId": "queryAllPrices_get",
                "responses": {
                    "200": {
                        "description": "successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/queryAllPrices_outputs"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{address}/getEtherBalances": {
            "get": {
                "summary": "",
                "description": "",
                "parameters": [],
                "operationId": "",
                "responses": {
                    "default": {
                        "description": "Default response"
                    }
                }
            },
            "description": "provider  - A Web3 instance, Ethers.js provider, JSONRPC endpoint, or EIP-1193 compatible provider\naddresses  - An array of addresses as hexadecimal string.\noptions  (optional) - The options to use.\nReturns: > - A promise with an object with the addresses and the balances.",
            "summary": "Get Ether balances for addresses."
        },
        "/{address}/getTokenBalances": {
            "get": {
                "summary": "query(bytes,uint256[]) [read only]",
                "operationId": "query_get",
                "parameters": [
                    {
                        "description": "The contract address",
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "bytes: the compiled bytecode for the series of function calls to get the final price",
                        "name": "script",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "uint256[]: index locations within the script to insert input amounts dynamically",
                        "name": "inputLocations",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/fromParam"
                    },
                    {
                        "$ref": "#/components/parameters/valueParam"
                    },
                    {
                        "$ref": "#/components/parameters/gasParam"
                    },
                    {
                        "$ref": "#/components/parameters/gaspriceParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/query_outputs"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "query(bytes,uint256[]) [read only]",
                "operationId": "query_post",
                "parameters": [
                    {
                        "description": "The contract address",
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/fromParam"
                    },
                    {
                        "$ref": "#/components/parameters/valueParam"
                    },
                    {
                        "$ref": "#/components/parameters/gasParam"
                    },
                    {
                        "$ref": "#/components/parameters/gaspriceParam"
                    },
                    {
                        "$ref": "#/components/parameters/syncParam"
                    },
                    {
                        "$ref": "#/components/parameters/callParam"
                    },
                    {
                        "$ref": "#/components/parameters/privateFromParam"
                    },
                    {
                        "$ref": "#/components/parameters/privateForParam"
                    },
                    {
                        "$ref": "#/components/parameters/blocknumberParam"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/query_inputs"
                            }
                        },
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/query_inputs"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/query_outputs"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{address}/getTokensBalance": {
            "get": {
                "summary": "query(bytes,uint256[]) [read only]",
                "operationId": "getTokensBalance",
                "parameters": [
                    {
                        "description": "The contract address",
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "bytes: the compiled bytecode for the series of function calls to get the final price",
                        "name": "script",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "uint256[]: index locations within the script to insert input amounts dynamically",
                        "name": "inputLocations",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The 'from' address (header: x-manifold-from)",
                        "name": "fold-from",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "0xf62fbd52d83fded97386fb9dfcb0bfbb3c164147"
                        }
                    },
                    {
                        "description": "Ether value to send with the transaction (header: x-manifold-ethvalue)",
                        "name": "fold-ethvalue",
                        "in": "query",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Gas to send with the transaction (auto-calculated if not set) (header: x-manifold-gas)",
                        "name": "fold-gas",
                        "in": "query",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Gas Price offered (header: x-manifold-gasprice)",
                        "name": "fold-gasprice",
                        "in": "query",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/query_outputs"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "query(bytes,uint256[]) [read only]",
                "operationId": "query_post",
                "parameters": [
                    {
                        "description": "The contract address",
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/fromParam"
                    },
                    {
                        "$ref": "#/components/parameters/valueParam"
                    },
                    {
                        "$ref": "#/components/parameters/gasParam"
                    },
                    {
                        "$ref": "#/components/parameters/gaspriceParam"
                    },
                    {
                        "$ref": "#/components/parameters/syncParam"
                    },
                    {
                        "$ref": "#/components/parameters/callParam"
                    },
                    {
                        "$ref": "#/components/parameters/privateFromParam"
                    },
                    {
                        "$ref": "#/components/parameters/privateForParam"
                    },
                    {
                        "$ref": "#/components/parameters/blocknumberParam"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/query_inputs"
                            }
                        },
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/query_inputs"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/query_outputs"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{address}/getTokensBalances": {
            "get": {
                "summary": "query(bytes,uint256[]) [read only]",
                "operationId": "getTokensBalances",
                "parameters": [
                    {
                        "description": "The contract address",
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "bytes: the compiled bytecode for the series of function calls to get the final price",
                        "name": "script",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "uint256[]: index locations within the script to insert input amounts dynamically",
                        "name": "inputLocations",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The 'from' address (header: x-manifold-from)",
                        "name": "fold-from",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "0xf62fbd52d83fded97386fb9dfcb0bfbb3c164147"
                        }
                    },
                    {
                        "description": "Ether value to send with the transaction (header: x-manifold-ethvalue)",
                        "name": "fold-ethvalue",
                        "in": "query",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Gas to send with the transaction (auto-calculated if not set) (header: x-manifold-gas)",
                        "name": "fold-gas",
                        "in": "query",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Gas Price offered (header: x-manifold-gasprice)",
                        "name": "fold-gasprice",
                        "in": "query",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/query_outputs"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "query(bytes,uint256[]) [read only]",
                "operationId": "query_post",
                "parameters": [
                    {
                        "description": "The contract address",
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/fromParam"
                    },
                    {
                        "$ref": "#/components/parameters/valueParam"
                    },
                    {
                        "$ref": "#/components/parameters/gasParam"
                    },
                    {
                        "$ref": "#/components/parameters/gaspriceParam"
                    },
                    {
                        "$ref": "#/components/parameters/syncParam"
                    },
                    {
                        "$ref": "#/components/parameters/callParam"
                    },
                    {
                        "$ref": "#/components/parameters/privateFromParam"
                    },
                    {
                        "$ref": "#/components/parameters/privateForParam"
                    },
                    {
                        "$ref": "#/components/parameters/blocknumberParam"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/query_inputs"
                            }
                        },
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/query_inputs"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/query_outputs"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{contract}": {
            "post": {
                "summary": "constructor()",
                "operationId": "constructor_post",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/fromParam"
                    },
                    {
                        "$ref": "#/components/parameters/valueParam"
                    },
                    {
                        "$ref": "#/components/parameters/gasParam"
                    },
                    {
                        "$ref": "#/components/parameters/gaspriceParam"
                    },
                    {
                        "$ref": "#/components/parameters/syncParam"
                    },
                    {
                        "$ref": "#/components/parameters/callParam"
                    },
                    {
                        "$ref": "#/components/parameters/privateFromParam"
                    },
                    {
                        "$ref": "#/components/parameters/privateForParam"
                    },
                    {
                        "$ref": "#/components/parameters/blocknumberParam"
                    },
                    {
                        "$ref": "#/components/parameters/registerParam"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/constructor_inputs"
                            }
                        },
                        "application/x-yaml": {
                            "schema": {
                                "$ref": "#/components/schemas/constructor_inputs"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/constructor_outputs"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "description": null,
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "parameters": []
            }
        }
    },
    "servers": [
        {
            "url": "https://archer.backbonecabal.com/gateways/archerdao"
        }
    ],
    "components": {
        "parameters": {
            "blocknumberParam": {
                "description": "The target block number for eth_call requests. One of 'earliest/latest/pending', a number or a hex string (header: x-manifold-blocknumber)",
                "name": "fold-blocknumber",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "callParam": {
                "description": "Perform a read-only call with the same parameters that would be used to invoke, and return result (header: x-manifold-call)",
                "name": "fold-call",
                "in": "query",
                "allowEmptyValue": true,
                "schema": {
                    "type": "boolean"
                }
            },
            "fromParam": {
                "description": "The 'from' address (header: x-manifold-from)",
                "name": "fold-from",
                "in": "query",
                "schema": {
                    "type": "string",
                    "default": "0xf62fbd52d83fded97386fb9dfcb0bfbb3c164147"
                }
            },
            "gasParam": {
                "description": "Gas to send with the transaction (auto-calculated if not set) (header: x-manifold-gas)",
                "name": "fold-gas",
                "in": "query",
                "allowEmptyValue": true,
                "schema": {
                    "type": "integer"
                }
            },
            "gaspriceParam": {
                "description": "Gas Price offered (header: x-manifold-gasprice)",
                "name": "fold-gasprice",
                "in": "query",
                "allowEmptyValue": true,
                "schema": {
                    "type": "integer"
                }
            },
            "privacyGroupIdParam": {
                "description": "Private transaction group ID (header: x-manifold-privacyGroupId)",
                "name": "fold-privacygroupid",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "privateForParam": {
                "description": "Private transaction recipients (comma separated or multiple params) (header: x-manifold-privatefor)",
                "name": "fold-privatefor",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "privateFromParam": {
                "description": "Private transaction sender (header: x-manifold-privatefrom)",
                "name": "fold-privatefrom",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "registerParam": {
                "description": "Register the installed contract on a friendly path (overwrites existing) (header: x-manifold-register)",
                "name": "fold-register",
                "in": "query",
                "schema": {
                    "type": "string"
                }
            },
            "syncParam": {
                "description": "Block the HTTP request until the tx is mined (does not store the receipt) (header: x-manifold-sync)",
                "name": "fold-sync",
                "in": "query",
                "allowEmptyValue": true,
                "schema": {
                    "type": "boolean",
                    "default": true
                }
            },
            "valueParam": {
                "description": "Ether value to send with the transaction (header: x-manifold-ethvalue)",
                "name": "fold-ethvalue",
                "in": "query",
                "allowEmptyValue": true,
                "schema": {
                    "type": "integer"
                }
            }
        },
        "schemas": {
            "constructor_inputs": {
                "type": "object"
            },
            "constructor_outputs": {
                "type": "object"
            },
            "error": {
                "properties": {
                    "error": {
                        "description": "Error message",
                        "type": "string"
                    }
                }
            },
            "getPrice_inputs": {
                "type": "object",
                "properties": {
                    "contractAddress": {
                        "description": "address: contract to query",
                        "type": "string",
                        "pattern": "^(0x)?[a-fA-F0-9]{40}$"
                    },
                    "data": {
                        "description": "bytes: the bytecode for the contract call",
                        "type": "string",
                        "pattern": "^(0x)?[a-fA-F0-9]+$"
                    }
                }
            },
            "getPrice_outputs": {
                "type": "object",
                "properties": {
                    "output": {
                        "description": "bytes",
                        "type": "string",
                        "pattern": "^(0x)?[a-fA-F0-9]+$"
                    }
                }
            },
            "queryAllPrices_inputs": {
                "type": "object",
                "properties": {
                    "inputLocations": {
                        "description": "uint256[]: index locations within the script to insert input amounts dynamically",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "pattern": "^-?[0-9]+$"
                        }
                    },
                    "script": {
                        "description": "bytes: the compiled bytecode for the series of function calls to get the final price",
                        "type": "string",
                        "pattern": "^(0x)?[a-fA-F0-9]+$"
                    }
                }
            },
            "queryAllPrices_outputs": {
                "type": "object",
                "properties": {
                    "output": {
                        "description": "bytes",
                        "type": "string",
                        "pattern": "^(0x)?[a-fA-F0-9]+$"
                    }
                }
            },
            "query_inputs": {
                "type": "object",
                "properties": {
                    "inputLocations": {
                        "description": "uint256[]: index locations within the script to insert input amounts dynamically",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "pattern": "^-?[0-9]+$"
                        }
                    },
                    "script": {
                        "description": "bytes: the compiled bytecode for the series of function calls to get the final price",
                        "type": "string",
                        "pattern": "^(0x)?[a-fA-F0-9]+$"
                    }
                }
            },
            "query_outputs": {
                "type": "object",
                "properties": {
                    "output": {
                        "description": "uint256",
                        "type": "string",
                        "pattern": "^-?[0-9]+$"
                    }
                }
            }
        },
        "links": {},
        "callbacks": {}
    },
    "security": []
}
